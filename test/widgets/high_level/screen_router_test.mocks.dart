// Mocks generated by Mockito 5.4.4 from annotations
// in intellicook_mobile/test/widgets/high_level/screen_router_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:intellicook_mobile/providers/screen_route.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:riverpod_annotation/riverpod_annotation.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAutoDisposeNotifierProviderRef_0<T> extends _i1.SmartFake
    implements _i2.AutoDisposeNotifierProviderRef<T> {
  _FakeAutoDisposeNotifierProviderRef_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ScreenRoute].
///
/// See the documentation for Mockito's code generation for more information.
class MockScreenRoute extends _i1.Mock implements _i3.ScreenRoute {
  @override
  _i2.AutoDisposeNotifierProviderRef<_i3.ScreenRouteState> get ref =>
      (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue:
            _FakeAutoDisposeNotifierProviderRef_0<_i3.ScreenRouteState>(
          this,
          Invocation.getter(#ref),
        ),
        returnValueForMissingStub:
            _FakeAutoDisposeNotifierProviderRef_0<_i3.ScreenRouteState>(
          this,
          Invocation.getter(#ref),
        ),
      ) as _i2.AutoDisposeNotifierProviderRef<_i3.ScreenRouteState>);

  @override
  _i3.ScreenRouteState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i3.ScreenRouteState.home,
        returnValueForMissingStub: _i3.ScreenRouteState.home,
      ) as _i3.ScreenRouteState);

  @override
  set state(_i3.ScreenRouteState? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.ScreenRouteState build() => (super.noSuchMethod(
        Invocation.method(
          #build,
          [],
        ),
        returnValue: _i3.ScreenRouteState.home,
        returnValueForMissingStub: _i3.ScreenRouteState.home,
      ) as _i3.ScreenRouteState);

  @override
  void set(_i3.ScreenRouteState? route) => super.noSuchMethod(
        Invocation.method(
          #set,
          [route],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool updateShouldNotify(
    _i3.ScreenRouteState? previous,
    _i3.ScreenRouteState? next,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            previous,
            next,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}
